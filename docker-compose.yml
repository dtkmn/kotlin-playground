services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      # KAFKA_HEAP_OPTS: -Xmx256M -Xms256M

  kafka:
    image: confluentinc/cp-kafka:6.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx1024M -Xms1024M

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.1
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081/

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
      JVM_OPTS: -Xms32M -Xmx64M

  postgres:
    image: "postgres:${POSTGRES_VERSION:-10.5}"
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-kotlin-playground}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
    ports:
      - "${POSTGRES_EXPORT_PORT:-5432}:5432"
    volumes:
      - "postgresData:/var/lib/postgresql/data"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:6.2.1
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081

  app:
    image: dtkmn/kotlin-playground:latest
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      KAFKA_BROKER: kafka:9092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081

volumes:
  postgresData: