---
base.url: http://localhost:8080
environment: ${ENVIRONMENT:local}
service.name: kotlin-playground
spring:
  main:
    banner-mode: "CONSOLE"
    allow-bean-definition-overriding: true
  profiles.active: ${PROFILES_ACTIVE:message-debug-logging}
  datasource:
    url: jdbc:h2:mem:kotlin-playground
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true



#    url: ${POSTGRES_DB:jdbc:postgresql://localhost:5432/ce-pii-service}
#    username: ${POSTGRES_USER:postgres}
#    password: ${POSTGRES_USER_PASSWORD:password}
#spring.jpa:
#  # show_sql should not be enabled in stg/prod
#  show_sql: false
#  # open-in-view should not be used. Lazy loading in controller will result in N+1.
#  open-in-view: false
#  generate-ddl: false
#  properties.hibernate.temp.use_jdbc_metadata_defaults: false
#  database-platform: org.hibernate.dialect.PostgreSQLDialect
#  hibernate.ddl-auto: validate

# kafka connector
#kafka.bootstrap.servers: ${KAFKA_CONNECTION:localhost:9092}


messaging:
  auth: ${KAFKA_AUTH:false}
  username: ${KAFKA_USER:}
  password: ${KAFKA_USER_PASSWORD:}
  ssl: ${KAFKA_SSL:false}
  transaction-id-prefix: kotlin-playground-tx-
  customer-profile:
    topic: kotlin.playground.profile.snapshot
    consumer-group-id: kotlin-playground-customer-profile-snapshot-consumer-group-1
    id-prefix: kotlin-playground-customer-profile-snapshot-
    listener-count: 1
    enabled: true
  ce-customer:
    topic: kotlin.playground.customerengagement.cecustomer.snapshot
  schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
  auto.register.schemas: ${SCHEMA_REGISTRY_AUTO_REG:true}


# dragon specific values
#dragon:
#  cache:
#    internal-data:
#      max-size: 100
#      ttl-in-minutes: ${CACHE_INTERNAL_DATA_TTL:10080}
#    customer-contact:
#      max-size: 100
#      ttl-in-minutes: ${CACHE_CUSTOMER_CONTACT_TTL:10080}
#    customer-name:
#      max-size: 100
#      ttl-in-minutes: ${CACHE_CUSTOMER_NAME_TTL:10080}
#  rest:
#    basic-auth:
#      enabled: ${APIGEE_BASIC_AUTH_ENABLED:true}
#      username: ${APIGEE_BASIC_AUTH_USER:apizclient}
#      password: ${APIGEE_BASIC_AUTH_PASS:{bcrypt}$2a$12$SA/4ISxzQmwRJ232gawpiu7Se86Ohs3SC47gfDj8dl/tZnMLpo/De}
#      matchers:
#        - /v2/pii/external/**
#  featureflag:
#    sdkKey: ${FEATURE_FLAG_SDK_KEY:22dba26f-b9e6-4259-93bd-71b5936c5a57}
#  api:
#    properties:
#      max-connections-per-route: ${HTTP_CLIENT_MAX_CONNECTIONS_PER_ROUTE:5}
#      max-connections-total: ${HTTP_CLIENT_MAX_CONNECTIONS_TOTAL:10}
#    google:
#      url: https://maps.googleapis.com
#      key: ${GOOGLE_API_KEY:hellogoogle}
#    customer-service:
#      url: ${CUSTOMER_SERVICE_URL:https://customer-service.apps.dev.nonprod.c0.phx-infra.com/v2}
#  messaging:
#    auth: ${KAFKA_AUTH:false}
#    username: ${KAFKA_USER:}
#    password: ${KAFKA_USER_PASSWORD:}
#    ssl: ${KAFKA_SSL:false}
#    transaction-id-prefix: ce-pii-service-tx-
#    customer-profile:
#      topic: mox.customer.profile.snapshot
#      consumer-group-id: ce-pii-service-customer-profile-snapshot-consumer-group-1
#      id-prefix: ce-pii-service-customer-profile-snapshot-
#      listener-count: 1
#      enabled: true
#    ce-customer:
#      topic: mox.customerengagement.cecustomer.snapshot
#    schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
#    auto.register.schemas: ${SCHEMA_REGISTRY_AUTO_REG:true}

#pactbroker:
#  url: ${PACT_BROKER_HOST_URL:http://localhost:9292}
#  auth:
#    username: ${PACT_BROKER_USERNAME:pact_user}
#    password: ${PACT_BROKER_PASSWORD:pact_password}
#spring.cloud.vault.enabled: ${VAULT_ENABLED:false}
